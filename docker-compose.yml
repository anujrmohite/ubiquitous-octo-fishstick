version: '3.8'

services:
  web:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
      - ./data/uploads:/app/data/uploads
      - ./data/reports:/app/data/reports
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=reportuser
      - POSTGRES_PASSWORD=reportpass
      - POSTGRES_DB=reportdb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - UPLOAD_FOLDER=/app/data/uploads
      - REPORT_FOLDER=/app/data/reports
      - CSV_CHUNK_SIZE=100000
      - MAX_WORKERS=4
    depends_on:
      - db
      - redis
    restart: on-failure

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=reportuser
      - POSTGRES_PASSWORD=reportpass
      - POSTGRES_DB=reportdb
    ports:
      - "5432:5432"
    restart: on-failure

  redis:
    image: redis:6
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: on-failure

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: on-failure

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    restart: on-failure

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: